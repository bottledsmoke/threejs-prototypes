/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Plane: THREE.Mesh
    Plane012: THREE.Mesh
    Plane012_1: THREE.Mesh
    Stool_Legs: THREE.Mesh
    Stool_Seat: THREE.Mesh
    Stool_Footrest001: THREE.Mesh
    Monitor_Base: THREE.Mesh
    Mounting_Rod_Arms: THREE.Mesh
    Mounting_Rod_Monitor_Core: THREE.Mesh
    Mounting_Rod_Base_Core: THREE.Mesh
    Monitor: THREE.Mesh
    Mounting_Rod_Monitor: THREE.Mesh
    Adjustment_Handles: THREE.Mesh
    Screen_Cintiq: THREE.Mesh
    Monitor_Glass_Inlay: THREE.Mesh
    Legs: THREE.Mesh
    Surface: THREE.Mesh
    Legs_Feet: THREE.Mesh
    Base: THREE.Mesh
    Keys: THREE.Mesh
    Keys_Function: THREE.Mesh
    Screen_Casing: THREE.Mesh
    Cylinder: THREE.Mesh
    ['Bezel-Glass']: THREE.Mesh
    Bezel_Rubb: THREE.Mesh
    Macbook_Screen: THREE.Mesh
    Wacom_Pen_Holder: THREE.Mesh
    Cylinder005: THREE.Mesh
    Cylinder005_1: THREE.Mesh
    Cylinder005_2: THREE.Mesh
    Coaster: THREE.Mesh
    Coffee_Cup: THREE.Mesh
    Coffee: THREE.Mesh
    Keyboard_Shell: THREE.Mesh
    Keyboard_Keys_Grey: THREE.Mesh
    Keyboard_Keys_White: THREE.Mesh
  }
  materials: {
    ['Black Plastic']: THREE.MeshStandardMaterial
    ['Brushed Aluminum']: THREE.MeshStandardMaterial
    ['Black Plastic.003']: THREE.MeshStandardMaterial
    ['Black Plastic.004']: THREE.MeshStandardMaterial
    Cintiq_Screen: THREE.MeshStandardMaterial
    ['Black Glass']: THREE.MeshStandardMaterial
    ['Brown Wood']: THREE.MeshStandardMaterial
    Screen: THREE.MeshStandardMaterial
    ['Blue Porcelain']: THREE.MeshStandardMaterial
    Coffee: THREE.MeshStandardMaterial
    ['Gray Plastic']: THREE.MeshStandardMaterial
    ['White Plastic']: THREE.MeshStandardMaterial
  }
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/Room.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.Plane.geometry} material={nodes.Plane.material} />
      <group position={[0.33, 0.03, 0.1]}>
        <mesh geometry={nodes.Plane012.geometry} material={nodes.Plane012.material} />
        <mesh geometry={nodes.Plane012_1.geometry} material={nodes.Plane012_1.material} />
      </group>
      <mesh geometry={nodes.Stool_Legs.geometry} material={nodes.Stool_Legs.material} />
      <mesh geometry={nodes.Stool_Seat.geometry} material={nodes.Stool_Seat.material} />
      <mesh
        geometry={nodes.Stool_Footrest001.geometry}
        material={materials['Black Plastic.004']}
        position={[0, -0.62, 0.48]}
      />
      <mesh geometry={nodes.Monitor_Base.geometry} material={nodes.Monitor_Base.material} />
      <mesh geometry={nodes.Mounting_Rod_Arms.geometry} material={nodes.Mounting_Rod_Arms.material} />
      <mesh geometry={nodes.Mounting_Rod_Monitor_Core.geometry} material={nodes.Mounting_Rod_Monitor_Core.material} />
      <mesh geometry={nodes.Mounting_Rod_Base_Core.geometry} material={nodes.Mounting_Rod_Base_Core.material} />
      <mesh geometry={nodes.Monitor.geometry} material={nodes.Monitor.material} />
      <mesh geometry={nodes.Mounting_Rod_Monitor.geometry} material={nodes.Mounting_Rod_Monitor.material} />
      <mesh geometry={nodes.Adjustment_Handles.geometry} material={nodes.Adjustment_Handles.material} />
      <mesh geometry={nodes.Screen_Cintiq.geometry} material={materials.Cintiq_Screen} />
      <mesh geometry={nodes.Monitor_Glass_Inlay.geometry} material={nodes.Monitor_Glass_Inlay.material} />
      <mesh geometry={nodes.Legs.geometry} material={nodes.Legs.material} />
      <mesh geometry={nodes.Surface.geometry} material={materials['Brown Wood']} />
      <mesh geometry={nodes.Legs_Feet.geometry} material={nodes.Legs_Feet.material} />
      <mesh geometry={nodes.Base.geometry} material={nodes.Base.material} />
      <mesh geometry={nodes.Keys.geometry} material={nodes.Keys.material} />
      <mesh geometry={nodes.Keys_Function.geometry} material={nodes.Keys_Function.material} />
      <mesh geometry={nodes.Screen_Casing.geometry} material={nodes.Screen_Casing.material} />
      <mesh geometry={nodes.Cylinder.geometry} material={nodes.Cylinder.material} />
      <mesh geometry={nodes['Bezel-Glass'].geometry} material={nodes['Bezel-Glass'].material} />
      <mesh geometry={nodes.Bezel_Rubb.geometry} material={nodes.Bezel_Rubb.material} />
      <mesh geometry={nodes.Macbook_Screen.geometry} material={materials.Screen} />
      <mesh
        geometry={nodes.Wacom_Pen_Holder.geometry}
        material={nodes.Wacom_Pen_Holder.material}
        position={[-0.44, 0.04, -0.07]}>
        <group position={[0, 0.07, 0]}>
          <mesh geometry={nodes.Cylinder005.geometry} material={nodes.Cylinder005.material} />
          <mesh geometry={nodes.Cylinder005_1.geometry} material={nodes.Cylinder005_1.material} />
          <mesh geometry={nodes.Cylinder005_2.geometry} material={nodes.Cylinder005_2.material} />
        </group>
      </mesh>
      <mesh geometry={nodes.Coaster.geometry} material={nodes.Coaster.material} />
      <mesh geometry={nodes.Coffee_Cup.geometry} material={nodes.Coffee_Cup.material} />
      <mesh geometry={nodes.Coffee.geometry} material={materials.Coffee} />
      <mesh
        geometry={nodes.Keyboard_Shell.geometry}
        material={nodes.Keyboard_Shell.material}
        position={[0, 0.04, 0.09]}>
        <mesh
          geometry={nodes.Keyboard_Keys_Grey.geometry}
          material={materials['Gray Plastic']}
          position={[0, 0.01, 0.01]}
        />
        <mesh
          geometry={nodes.Keyboard_Keys_White.geometry}
          material={materials['White Plastic']}
          position={[0, 0.01, 0.01]}
        />
      </mesh>
    </group>
  )
}

useGLTF.preload('/Room.glb')
